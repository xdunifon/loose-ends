// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LooseEndsApi.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250518150608_ModelUpdates")]
    partial class ModelUpdates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("LooseEndsApi.Data.Models.DefaultResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DefaultResponses");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundTimer")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.PlayerResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundPromptId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.HasIndex("RoundPromptId");

                    b.ToTable("PlayerResponses");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.PlayerVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResponseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.HasIndex("ResponseId");

                    b.ToTable("PlayerVotes");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVoting")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameSessionId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.RoundPrompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prompt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoundId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.ToTable("RoundPrompts");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.Player", b =>
                {
                    b.HasOne("LooseEndsApi.Data.Models.GameSession", "GameSession")
                        .WithMany("Players")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.PlayerResponse", b =>
                {
                    b.HasOne("LooseEndsApi.Data.Models.Player", "Player")
                        .WithOne("Responses")
                        .HasForeignKey("LooseEndsApi.Data.Models.PlayerResponse", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LooseEndsApi.Data.Models.RoundPrompt", "RoundPrompt")
                        .WithMany("PlayerResponses")
                        .HasForeignKey("RoundPromptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("RoundPrompt");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.PlayerVote", b =>
                {
                    b.HasOne("LooseEndsApi.Data.Models.Player", "Player")
                        .WithOne("Votes")
                        .HasForeignKey("LooseEndsApi.Data.Models.PlayerVote", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LooseEndsApi.Data.Models.PlayerResponse", "Response")
                        .WithMany()
                        .HasForeignKey("ResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Response");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.Round", b =>
                {
                    b.HasOne("LooseEndsApi.Data.Models.GameSession", "GameSession")
                        .WithMany("Rounds")
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameSession");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.RoundPrompt", b =>
                {
                    b.HasOne("LooseEndsApi.Data.Models.Round", "Round")
                        .WithMany("RoundPrompts")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Round");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.GameSession", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.Player", b =>
                {
                    b.Navigation("Responses")
                        .IsRequired();

                    b.Navigation("Votes")
                        .IsRequired();
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.Round", b =>
                {
                    b.Navigation("RoundPrompts");
                });

            modelBuilder.Entity("LooseEndsApi.Data.Models.RoundPrompt", b =>
                {
                    b.Navigation("PlayerResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
